name: build-and-bundle
on: 
  pull_request:
  push:
    branches:
      - ros1
      - ros2
  schedule:
    - cron: '0 */2 * * *' # run every 2 hours for testing purposes

jobs:
  build_and_bundle_ros1:
    strategy:
      matrix:
        distro: ['kinetic', 'melodic']
        gazebo: [7, 9]
        exclude:
        - distro: 'melodic'
          gazebo: 7
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || github.ref != 'refs/heads/ros2'
    name: 'Build and Bundle (ROS1)'
    container:
      image: ros:${{ matrix.distro }}-ros-core
    steps:
    - name: Checkout Branch
      uses: actions/checkout@v1
    - name: Build and Bundle Robot Workspace
      id: build
      uses: mm318/aws-robomaker-sample-application-ci@master
      with:
        ros-distro: ${{ matrix.distro }}
        gazebo-version: ${{ matrix.gazebo }}
        workspace-dir: robot_ws
        generate-sources: 'true'
    - name: Build and Bundle Simulation Workspace
      uses: mm318/aws-robomaker-sample-application-ci@master
      with:
        ros-distro: ${{ matrix.distro }}
        gazebo-version: ${{ matrix.gazebo }}
        workspace-dir: simulation_ws
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ROS1 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ROS1 }}
        aws-region: us-west-2
      if: always() && github.ref == 'refs/heads/ros1' # always log "push" and "schedule" build status
    - name: Log Build Status
      uses: ros-tooling/action-cloudwatch-metrics@0.0.4
      with:
        namespace: 'GitHubActionsCI'
      if: always() && github.ref == 'refs/heads/ros1' # always log "push" and "schedule" build status
    - name: Upload to S3
      uses: mm318/s3-cp-action@v0.3.0
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_ROS1 }}
        AWS_REGION: 'us-west-2'
        FILES: 'sources.zip sources.tar.gz robot_ws.tar simulation_ws.tar'
        DEST: 'travis/cloudwatch/${{ steps.build.outputs.ros-distro }}/${{ steps.build.outputs.gazebo-version }}/${{ steps.build.outputs.sample-app-version }}.${{ github.run_number }}/'
      if: github.event_name == 'schedule' # upload to S3 on "schedule" build

  build_and_bundle_ros2:
    strategy:
      matrix:
        distro: ['dashing']
        gazebo: [9]
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/ros2'
    name: 'Build and Bundle (ROS2)'
    container:
      image: ros:${{ matrix.distro }}-ros-core
    steps:
    - name: Checkout Branch
      uses: actions/checkout@v1
      with:
        ref: 'ros2'
    - name: Build and Bundle Robot Workspace
      id: build
      uses: mm318/aws-robomaker-sample-application-ci@master
      with:
        ros-distro: ${{ matrix.distro }}
        gazebo-version: ${{ matrix.gazebo }}
        workspace-dir: robot_ws
        generate-sources: 'true'
    - name: Build and Bundle Simulation Workspace
      uses: mm318/aws-robomaker-sample-application-ci@master
      with:
        ros-distro: ${{ matrix.distro }}
        gazebo-version: ${{ matrix.gazebo }}
        workspace-dir: simulation_ws
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ROS2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ROS2 }}
        aws-region: us-west-2
      if: always()   # always log "push" and "schedule" build failures
    - name: Log Build Status
      uses: ros-tooling/action-cloudwatch-metrics@0.0.4
      with:
        namespace: 'GitHubActionsCI'
      if: always()   # always log "push" and "schedule" build failures
    - name: Upload to S3
      uses: mm318/s3-cp-action@v0.3.0
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_ROS2 }}
        AWS_REGION: 'us-west-2'
        FILES: 'sources.zip sources.tar.gz robot_ws.tar simulation_ws.tar'
        DEST: 'travis/cloudwatch/${{ steps.build.outputs.ros-distro }}/${{ steps.build.outputs.gazebo-version }}/${{ steps.build.outputs.sample-app-version }}.${{ github.run_number }}/'
      if: github.event_name == 'schedule' # upload to S3 on "schedule" build
